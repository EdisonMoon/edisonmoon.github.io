<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on Edinik&#39;s Blog</title>
    <link>https://edinik.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on Edinik&#39;s Blog</description>
    <generator>Hugo 0.125.0</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 12 Jun 2023 21:53:37 +0800</lastBuildDate>
    <atom:link href="https://edinik.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>设计模式 | 工厂模式</title>
      <link>https://edinik.github.io/design-pattern-factory-method/</link>
      <pubDate>Mon, 12 Jun 2023 21:53:37 +0800</pubDate>
      <guid>https://edinik.github.io/design-pattern-factory-method/</guid>
      <description>参考资料 设计模式之工厂模式（factory pattern） - alpha_panda - 博客园 工厂模式 - 菜鸟教程</description>
    </item>
    <item>
      <title>设计模式 | 单例模式</title>
      <link>https://edinik.github.io/design-pattern-singleton/</link>
      <pubDate>Mon, 22 May 2023 22:45:14 +0800</pubDate>
      <guid>https://edinik.github.io/design-pattern-singleton/</guid>
      <description>定义 单例模式（Singleton Design Pattern）是一种创建型设计模式，它能够保证一个类只有一个实例，并提供一个访问该实例的全局节点。 三个必要条件： 构造函数必须是私有的，保证类的外部不能创建类的实例。 通过一个私有的静态变量来存储其唯一实例。 通过提供一个公开的静态方法，使得外部使用</description>
    </item>
    <item>
      <title>设计模式 | 简介</title>
      <link>https://edinik.github.io/design-pattern-introduction/</link>
      <pubDate>Mon, 10 Apr 2023 22:16:13 +0800</pubDate>
      <guid>https://edinik.github.io/design-pattern-introduction/</guid>
      <description>引言 Christopher Alexander说过：“每一个模式描述了一个在我们周围不断重复发生的问题，以及该问题的解决方案的核心。这样你就能一次又一次地使用该方案而不必做重复劳动。” 创建型 结构型 行为型 类 Factory Method Adapter Interpreter Template Method 对象 Abstract Factory Builder Prototype Singleton Adapter Bridge Composite Decorator Facade Flyweight Proxy Chain of Responsibility Command Iterator Mediator Memento Observer State Strategy Visitor Creational 创建型 与对象的创建有关。创建型类模</description>
    </item>
  </channel>
</rss>
